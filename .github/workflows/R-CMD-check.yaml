# Modified this from https://github.com/ateucher/rmapshaper/blob/master/.github/workflows/R-CMD-check.yaml
# Thanks, Andy!

on: [push, pull_request]

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
        - { os: windows-latest, r: '3.6', args: "--no-manual"}
        - { os: ubuntu-16.04, r: '3.6', args: "--no-manual"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true

    steps:
      - uses: actions/checkout@v1

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master

      - uses: r-lib/actions/setup-tinytex@master
        if: contains(matrix.config.args, 'no-manual') == false

      - name: Cache R packages
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-${{ matrix.config.dev_sf }}-${{ hashFiles('DESCRIPTION') }}

      - name: Install remotes package
        run: Rscript -e "install.packages('remotes')"

      - name: Install system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          Rscript -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo add-apt-repository -y ppa:cran/jq
          sudo -s eval "$sysreqs"
          # install spatial dependencies
          sudo add-apt-repository -y ppa:ubuntugis/ubuntugis-unstable
          sudo apt update
          sudo apt install \
            libudunits2-dev \
            libgdal-dev \
            libgeos-dev \
            libproj-dev \
            liblwgeom-dev

      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE, configure.args = c('sf' = '${{ matrix.config.sf_args }}'))
          remotes::install_cran('rcmdcheck')
        shell: Rscript {0}

      - name: Check
        run: |
          rcmdcheck::rcmdcheck(args = '${{ matrix.config.args }}', error_on = 'never', check_dir = 'check')
        shell: Rscript {0}

      #- name: Upload check results
      #  if: failure()
      #  uses: actions/upload-artifact@master
      #  with:
      #    name: ${{ runner.os }}-r${{ matrix.config.r }}-results
      #    path: check
